from src.hardware.elementary_logic_gates.and16_gate import And16Gate, and16_gate
from src.hardware.elementary_logic_gates.mux16_gate import Mux16Gate, mux16_gate
from src.hardware.elementary_logic_gates.not16_gate import Not16Gate, not16_gate
from src.hardware.elementary_logic_gates.not_gate import NotGate, not_gate
from src.hardware.elementary_logic_gates.or8way_gate import Or8WayGate, or8way_gate
from src.hardware.elementary_logic_gates.or_gate import OrGate, or_gate
from src.hardware.types.alu import ALUOutput
from src.hardware.types.bits import Bit, Bits8, Bits16

from .add16_chip import Add16Chip, add16_chip
from .inc16_chip import Inc16Chip


def alu_chip(
    x0: int,
    x1: int,
    x2: int,
    x3: int,
    x4: int,
    x5: int,
    x6: int,
    x7: int,
    x8: int,
    x9: int,
    x10: int,
    x11: int,
    x12: int,
    x13: int,
    x14: int,
    x15: int,
    y0: int,
    y1: int,
    y2: int,
    y3: int,
    y4: int,
    y5: int,
    y6: int,
    y7: int,
    y8: int,
    y9: int,
    y10: int,
    y11: int,
    y12: int,
    y13: int,
    y14: int,
    y15: int,
    zx: int,
    nx: int,
    zy: int,
    ny: int,
    f: int,
    no: int,
):
    x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 = mux16_gate(
        a0=x0,
        a1=x1,
        a2=x2,
        a3=x3,
        a4=x4,
        a5=x5,
        a6=x6,
        a7=x7,
        a8=x8,
        a9=x9,
        a10=x10,
        a11=x11,
        a12=x12,
        a13=x13,
        a14=x14,
        a15=x15,
        b0=0,
        b1=0,
        b2=0,
        b3=0,
        b4=0,
        b5=0,
        b6=0,
        b7=0,
        b8=0,
        b9=0,
        b10=0,
        b11=0,
        b12=0,
        b13=0,
        b14=0,
        b15=0,
        sel=zx,
    )

    (
        not_x0,
        not_x1,
        not_x2,
        not_x3,
        not_x4,
        not_x5,
        not_x6,
        not_x7,
        not_x8,
        not_x9,
        not_x10,
        not_x11,
        not_x12,
        not_x13,
        not_x14,
        not_x15,
    ) = not16_gate(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15)

    x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 = mux16_gate(
        a0=x0,
        a1=x1,
        a2=x2,
        a3=x3,
        a4=x4,
        a5=x5,
        a6=x6,
        a7=x7,
        a8=x8,
        a9=x9,
        a10=x10,
        a11=x11,
        a12=x12,
        a13=x13,
        a14=x14,
        a15=x15,
        b0=not_x0,
        b1=not_x1,
        b2=not_x2,
        b3=not_x3,
        b4=not_x4,
        b5=not_x5,
        b6=not_x6,
        b7=not_x7,
        b8=not_x8,
        b9=not_x9,
        b10=not_x10,
        b11=not_x11,
        b12=not_x12,
        b13=not_x13,
        b14=not_x14,
        b15=not_x15,
        sel=nx,
    )

    y0, y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, y13, y14, y15 = mux16_gate(
        a0=y0,
        a1=y1,
        a2=y2,
        a3=y3,
        a4=y4,
        a5=y5,
        a6=y6,
        a7=y7,
        a8=y8,
        a9=y9,
        a10=y10,
        a11=y11,
        a12=y12,
        a13=y13,
        a14=y14,
        a15=y15,
        b0=0,
        b1=0,
        b2=0,
        b3=0,
        b4=0,
        b5=0,
        b6=0,
        b7=0,
        b8=0,
        b9=0,
        b10=0,
        b11=0,
        b12=0,
        b13=0,
        b14=0,
        b15=0,
        sel=zy,
    )

    (
        not_y0,
        not_y1,
        not_y2,
        not_y3,
        not_y4,
        not_y5,
        not_y6,
        not_y7,
        not_y8,
        not_y9,
        not_y10,
        not_y11,
        not_y12,
        not_y13,
        not_y14,
        not_y15,
    ) = not16_gate(y0, y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, y13, y14, y15)

    y0, y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, y13, y14, y15 = mux16_gate(
        a0=y0,
        a1=y1,
        a2=y2,
        a3=y3,
        a4=y4,
        a5=y5,
        a6=y6,
        a7=y7,
        a8=y8,
        a9=y9,
        a10=y10,
        a11=y11,
        a12=y12,
        a13=y13,
        a14=y14,
        a15=y15,
        b0=not_y0,
        b1=not_y1,
        b2=not_y2,
        b3=not_y3,
        b4=not_y4,
        b5=not_y5,
        b6=not_y6,
        b7=not_y7,
        b8=not_y8,
        b9=not_y9,
        b10=not_y10,
        b11=not_y11,
        b12=not_y12,
        b13=not_y13,
        b14=not_y14,
        b15=not_y15,
        sel=ny,
    )

    (
        x_and_y_0,
        x_and_y_1,
        x_and_y_2,
        x_and_y_3,
        x_and_y_4,
        x_and_y_5,
        x_and_y_6,
        x_and_y_7,
        x_and_y_8,
        x_and_y_9,
        x_and_y_10,
        x_and_y_11,
        x_and_y_12,
        x_and_y_13,
        x_and_y_14,
        x_and_y_15,
    ) = and16_gate(
        x0,
        x1,
        x2,
        x3,
        x4,
        x5,
        x6,
        x7,
        x8,
        x9,
        x10,
        x11,
        x12,
        x13,
        x14,
        x15,
        y0,
        y1,
        y2,
        y3,
        y4,
        y5,
        y6,
        y7,
        y8,
        y9,
        y10,
        y11,
        y12,
        y13,
        y14,
        y15,
    )

    (
        x_add_y_0,
        x_add_y_1,
        x_add_y_2,
        x_add_y_3,
        x_add_y_4,
        x_add_y_5,
        x_add_y_6,
        x_add_y_7,
        x_add_y_8,
        x_add_y_9,
        x_add_y_10,
        x_add_y_11,
        x_add_y_12,
        x_add_y_13,
        x_add_y_14,
        x_add_y_15,
    ) = add16_chip(
        x0,
        x1,
        x2,
        x3,
        x4,
        x5,
        x6,
        x7,
        x8,
        x9,
        x10,
        x11,
        x12,
        x13,
        x14,
        x15,
        y0,
        y1,
        y2,
        y3,
        y4,
        y5,
        y6,
        y7,
        y8,
        y9,
        y10,
        y11,
        y12,
        y13,
        y14,
        y15,
    )

    (
        out0,
        out1,
        out2,
        out3,
        out4,
        out5,
        out6,
        out7,
        out8,
        out9,
        out10,
        out11,
        out12,
        out13,
        out14,
        out15,
    ) = mux16_gate(
        a0=x_and_y_0,
        a1=x_and_y_1,
        a2=x_and_y_2,
        a3=x_and_y_3,
        a4=x_and_y_4,
        a5=x_and_y_5,
        a6=x_and_y_6,
        a7=x_and_y_7,
        a8=x_and_y_8,
        a9=x_and_y_9,
        a10=x_and_y_10,
        a11=x_and_y_11,
        a12=x_and_y_12,
        a13=x_and_y_13,
        a14=x_and_y_14,
        a15=x_and_y_15,
        b0=x_add_y_0,
        b1=x_add_y_1,
        b2=x_add_y_2,
        b3=x_add_y_3,
        b4=x_add_y_4,
        b5=x_add_y_5,
        b6=x_add_y_6,
        b7=x_add_y_7,
        b8=x_add_y_8,
        b9=x_add_y_9,
        b10=x_add_y_10,
        b11=x_add_y_11,
        b12=x_add_y_12,
        b13=x_add_y_13,
        b14=x_add_y_14,
        b15=x_add_y_15,
        sel=f,
    )

    (
        not_out0,
        not_out1,
        not_out2,
        not_out3,
        not_out4,
        not_out5,
        not_out6,
        not_out7,
        not_out8,
        not_out9,
        not_out10,
        not_out11,
        not_out12,
        not_out13,
        not_out14,
        not_out15,
    ) = not16_gate(
        out0,
        out1,
        out2,
        out3,
        out4,
        out5,
        out6,
        out7,
        out8,
        out9,
        out10,
        out11,
        out12,
        out13,
        out14,
        out15,
    )

    (
        out0,
        out1,
        out2,
        out3,
        out4,
        out5,
        out6,
        out7,
        out8,
        out9,
        out10,
        out11,
        out12,
        out13,
        out14,
        out15,
    ) = mux16_gate(
        a0=out0,
        a1=out1,
        a2=out2,
        a3=out3,
        a4=out4,
        a5=out5,
        a6=out6,
        a7=out7,
        a8=out8,
        a9=out9,
        a10=out10,
        a11=out11,
        a12=out12,
        a13=out13,
        a14=out14,
        a15=out15,
        b0=not_out0,
        b1=not_out1,
        b2=not_out2,
        b3=not_out3,
        b4=not_out4,
        b5=not_out5,
        b6=not_out6,
        b7=not_out7,
        b8=not_out8,
        b9=not_out9,
        b10=not_out10,
        b11=not_out11,
        b12=not_out12,
        b13=not_out13,
        b14=not_out14,
        b15=not_out15,
        sel=no,
    )

    zr = not_gate(
        or_gate(
            or8way_gate(out0, out1, out2, out3, out4, out5, out6, out7),
            or8way_gate(out8, out9, out10, out11, out12, out13, out14, out15),
        )
    )

    ng = out0

    return (
        (
            out0,
            out1,
            out2,
            out3,
            out4,
            out5,
            out6,
            out7,
            out8,
            out9,
            out10,
            out11,
            out12,
            out13,
            out14,
            out15,
        ),
        zr,
        ng,
    )


class ALUChip:
    def __init__(self):
        self.not_gate = NotGate()
        self.or_gate = OrGate()
        self.or8way_gate = Or8WayGate()
        self.mux16_gate = Mux16Gate()
        self.not16_gate = Not16Gate()
        self.and16_gate = And16Gate()
        self.add16_chip = Add16Chip()
        self.inc16_chip = Inc16Chip()

    def __call__(
        self, x: Bits16, y: Bits16, zx: Bit, nx: Bit, zy: Bit, ny: Bit, f: Bit, no: Bit
    ) -> ALUOutput:
        """
        x: 16-bit input
        y: 16-bit input
        zx: If zx == 1, replace x with 0
        nx: If nx == 1, ~x
        zy: If zy == 1, replace y with 0
        ny: If ny == 1, ~y
        f:  If f == 1, compute (x + y)
            If f == 0, compute (x & y)
        no: If no == 1, compute ~result
        out: 16-bit output
        zr: If out == 0, set to 1
        ng: If out < 0, set to 1
        """
        x = self.mux16_gate(x, Bits16.from_string("0000000000000000"), sel=zx)
        x = self.mux16_gate(x, self.not16_gate(x), sel=nx)

        y = self.mux16_gate(y, Bits16.from_string("0000000000000000"), sel=zy)
        y = self.mux16_gate(y, self.not16_gate(y), sel=ny)

        out = self.mux16_gate(self.and16_gate(x, y), self.add16_chip(x, y), sel=f)
        out = self.mux16_gate(out, self.not16_gate(out), sel=no)

        zr = self.not_gate(
            self.or_gate(
                self.or8way_gate(Bits8.from_bits(out[:8])),
                self.or8way_gate(Bits8.from_bits(out[8:])),
            )
        )
        ng = out[0]
        return ALUOutput(out=out, zr=zr, ng=ng)
